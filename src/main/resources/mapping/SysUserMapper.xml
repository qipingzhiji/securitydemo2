<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.userLogin.dao.sysuser.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.userLogin.entity.sysuser.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="credentialsNonExpired" jdbcType="BIT" property="credentialsnonexpired" />
    <result column="accountNonExpired" jdbcType="BIT" property="accountnonexpired" />
    <result column="accountNonLocked" jdbcType="BIT" property="accountnonlocked" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, realname, password, createDate, lastLoginTime, enabled, credentialsNonExpired, 
    accountNonExpired, accountNonLocked
  </sql>
  <select id="selectByExample" parameterType="com.userLogin.entity.sysuser.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.userLogin.entity.sysuser.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.userLogin.entity.sysuser.SysUser">
    insert into sys_user (id, username, realname, 
      password, createDate, lastLoginTime, 
      enabled, credentialsNonExpired, accountNonExpired, 
      accountNonLocked)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT}, #{credentialsnonexpired,jdbcType=BIT}, #{accountnonexpired,jdbcType=BIT}, 
      #{accountnonlocked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.userLogin.entity.sysuser.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="credentialsnonexpired != null">
        credentialsNonExpired,
      </if>
      <if test="accountnonexpired != null">
        accountNonExpired,
      </if>
      <if test="accountnonlocked != null">
        accountNonLocked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="credentialsnonexpired != null">
        #{credentialsnonexpired,jdbcType=BIT},
      </if>
      <if test="accountnonexpired != null">
        #{accountnonexpired,jdbcType=BIT},
      </if>
      <if test="accountnonlocked != null">
        #{accountnonlocked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.userLogin.entity.sysuser.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastlogintime != null">
        lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.credentialsnonexpired != null">
        credentialsNonExpired = #{record.credentialsnonexpired,jdbcType=BIT},
      </if>
      <if test="record.accountnonexpired != null">
        accountNonExpired = #{record.accountnonexpired,jdbcType=BIT},
      </if>
      <if test="record.accountnonlocked != null">
        accountNonLocked = #{record.accountnonlocked,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      enabled = #{record.enabled,jdbcType=BIT},
      credentialsNonExpired = #{record.credentialsnonexpired,jdbcType=BIT},
      accountNonExpired = #{record.accountnonexpired,jdbcType=BIT},
      accountNonLocked = #{record.accountnonlocked,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.userLogin.entity.sysuser.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="credentialsnonexpired != null">
        credentialsNonExpired = #{credentialsnonexpired,jdbcType=BIT},
      </if>
      <if test="accountnonexpired != null">
        accountNonExpired = #{accountnonexpired,jdbcType=BIT},
      </if>
      <if test="accountnonlocked != null">
        accountNonLocked = #{accountnonlocked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.userLogin.entity.sysuser.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=BIT},
      credentialsNonExpired = #{credentialsnonexpired,jdbcType=BIT},
      accountNonExpired = #{accountnonexpired,jdbcType=BIT},
      accountNonLocked = #{accountnonlocked,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>